#pragma once

namespace alg
{
	/**
	*	波函数坍塌算法
	*
	*	1.从离散化的输入图像中提取所有可能的唯一n×n模式；输入中每个唯一模式的频率以后也用作采样分布。
	*	2.计算每个图案之间所有可能的重叠组合。模式之间重叠的（不）可能导致用于构建输出图像的主要约束集。
	*	3.输出样本中的每个离散图块都维护有一个合法模式的列表，这些合法模式可以定义该图块中的像素值。
	*	由于没有任何约束，例如在算法开始时，每个模式在任何图块中都是合法的。
	*	4.在输出样本中选择一个图块，然后根据覆盖图块的一种合法模式提交值。
	*	该选择遵循熵计算，该熵计算将寻找具有最少可用图案并因此受到最大约束的图块。
	*	在步骤1中计算出的基本图案的频率分布用于偏置图案的选择。
	*	这称为算法的观察步骤。
	*	5.在步骤2中计算出的重叠组合用于过滤掉覆盖相邻位置的任何非法图案，并将其递归应用于整个输出图像。
	*	这称为传播步骤。
	*	6.重复步骤4和5，观察并传播，直到无法取得进一步的进展为止。
	*	到那时，要么将所有图块固定为一个模式（算法成功），要么在某个点上某个图块不再有可用模式（算法失败）。
	*	在后一种情况下，算法将使用其他随机种子重新启动。
	*/
	
	class WFCAlgorithm
	{
	public:
		WFCAlgorithm()
		{
		}
		virtual ~WFCAlgorithm()
		{
		}
	public:
		
	protected:
		
	};
}
