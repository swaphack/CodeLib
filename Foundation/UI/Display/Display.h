#pragma once

#include "macros.h"

namespace ui
{
	/**
	*	布局方向
	*/
	enum LayoutDirection
	{
		// 无
		ELD_NONE,
		// 垂直布局
		ELD_HORIZONTAL,
		// 水平布局
		ELD_VERTICAL,
	};

	class Layout;
	/**
	*	界面显示
	*/
	class Display : public sys::Object
	{
	public:
		Display();
		virtual ~Display();
	public:
		/**
		*	设置ui根节点
		*/
		void setUIRoot(Widget* root);
		/**
		*	显示
		*/
		void show();
		/**
		*	隐藏
		*/
		void hide();
		/**
		*	销毁
		*/
		void close();
		/**
		*	重新加载
		*/
		void reload();
		/**
		*	设置文件路径
		*/
		void setFilePath(const char* filepath);
		/**
		*	文件路径
		*/
		const char* getFilePath();
		/**
		*	设置窗口界面大小
		*/
		void setViewSize(const sys::Size& inputSize);
		/**
		*	窗口界面大小
		*/
		const sys::Size& getViewSize();
		/**
		*	设置布局方向
		*/
		void setLayoutDirection(LayoutDirection eDirection);
		/**
		*	获取布局方向
		*/
		LayoutDirection getLayoutDirection();
		/**
		*	获取布局
		*/
		Layout* getLayout();
	protected:
		/**
		*	当窗口大小发生改变时
		*/
		void onViewSizeChanged(const sys::Size& inputSize);
		/**
		*	加载界面文件
		*/
		bool loadFile();
		/**
		*	初始化
		*/
		void initUI();
		/**
		*	事件绑定
		*/
		virtual void initEvent();
		/**
		*	初始化文本
		*/
		virtual void initText();
	protected:
		// 文件路径
		std::string m_strFilePath;
		// ui根节点
		Widget* m_pRoot;
		// 布局
		Layout* m_pLayout;
		// 布局方向
		LayoutDirection m_eLayoutDirection;
		// 窗口界面大小
		sys::Size m_sViewSize;
	};
}